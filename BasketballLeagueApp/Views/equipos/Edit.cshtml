@model BasketballLeagueApp.Models.equipos

@{
    Layout = "~/Views/Shared/_LayoutAdmins.cshtml";
    ViewData["Title"] = "Editar Equipo";
}

<div class="card shadow mt-4">
    <div class="card-header bg-primary text-white">
        <h3 class="mb-0"><i class="fa fa-edit"></i> Editar Equipo</h3>
    </div>

    <div class="card-body">

        @if (TempData["Debug"] != null)
        {
            <div class="alert alert-info">@TempData["Debug"]</div>
        }


        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }

        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            <input type="hidden" asp-for="id" />

            <div class="form-group">
                <label asp-for="nombre" class="control-label">Nombre del Equipo</label>
                <input asp-for="nombre" class="form-control" />
                <span asp-validation-for="nombre" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="sede" class="control-label">Sede</label>
                <input asp-for="sede" class="form-control" />
                <span asp-validation-for="sede" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="estado">Estado del Equipo</label>
                @Html.DropDownListFor(model => model.estado, new SelectList(
                         new List<SelectListItem>
                {
                new SelectListItem { Text = "Seleccione un estado", Value = "", Disabled = true, Selected = string.IsNullOrEmpty(Model.estado) },
                new SelectListItem { Text = "Activo", Value = "activo", Selected = Model.estado == "activo" },
                new SelectListItem { Text = "Inactivo", Value = "inactivo", Selected = Model.estado == "inactivo" }
                }, "Value", "Text", Model.estado), new { @class = "form-control" })
                <span class="text-danger">@Html.ValidationMessageFor(model => model.estado)</span>
            </div>

            <div class="form-group">
                <label>Imagen actual:</label><br />
                @if (!string.IsNullOrEmpty(Model.img))
                {
                    <img src="~/images/equipos/@Model.img" alt="@Model.nombre" class="img-thumbnail mb-2" style="max-width:150px; border-radius:10px;" />
                }
                else
                {
                    <span class="text-muted">No hay imagen disponible.</span>
                }

                <!-- Esto es CLAVE -->
                <input type="hidden" asp-for="img" value="@Model.img" />

            </div>

            <div class="form-group">
                <label>Cambiar imagen del equipo (opcional):</label>
                <input type="file" name="ImagenEquipo" class="form-control-file" />
            </div>


            <div class="mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-save"></i> Actualizar
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fa fa-arrow-left"></i> Cancelar
                </a>
            </div>
        </form>

    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
